definitions:
  models.User:
    properties:
      age:
        maximum: 150
        minimum: 0
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - email
    - name
    type: object
info:
  contact: {}
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя в системе
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Пользователь успешно создан'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Некорректный формат данных'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Ошибка создания пользователя'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать пользователя
      tags:
      - users
  /users/{id}:
    delete:
      description: Удаляет пользователя из базы данных
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: 'message: Пользователь успешно удалён'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Некорректный формат ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Ошибка удаления пользователя'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить пользователя
      tags:
      - users
    get:
      description: Получает данные пользователя по ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: 'error: Некорректный формат ID'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Пользователь не найден'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить пользователя
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Обновляет информацию о пользователе
      parameters:
      - description: Обновлённые данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Пользователь успешно обновлён'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Некорректный формат данных'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Ошибка обновления пользователя'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить пользователя
      tags:
      - users
swagger: "2.0"
